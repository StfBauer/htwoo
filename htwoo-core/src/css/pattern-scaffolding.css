body {
  font-family: var(--mediumFontFamily);
  background-color: var(--bodyBackground);
  color: var(--bodyText);
  margin: 0;
}

/**
 * This stylesheet is for styles you want to include only when displaying demo
 * styles for grids, animations, color swatches, etc.
 * These styles will not be your production CSS.
 */
:root {
  --pl-border-color: #dddddd;
  --pl-border-radius: 8px;
  --pl-grid-gap: 1rem;
  --pl-color-fpo: #69b3e7;
  --pl-color-fpo-light: #edf6fc;
}

#sg-patterns {
  box-sizing: border-box !important;
  max-width: 100%;
  padding: 0 0.5em;
}

.demo-animate {
  background: #ddd;
  padding: 1em;
  margin-bottom: 1em;
  text-align: center;
  border-radius: var(--pl-border-radius);
  cursor: pointer;
}

.sg-label {
  font-size: 90%;
  line-height: 1;
}

/**
 * Icon grid
 * 1) Generated by Gul-SVG-Sprites
 */
.icon-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
  gap: 2rem;
}

.icon-grid__item {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  border: 1px solid var(--pl-border-color);
  border-radius: var(--pl-border-radius);
  padding: 8px;
  height: 5.5rem;
}

.icon-grid .c-icon {
  margin-bottom: 0.25rem;
}

.icon-grid__label {
  font-size: 10px;
}

.icon {
  width: 1rem;
  height: 1rem;
}

.icon-boxes h2 {
  font-size: 1rem;
}

/**
* For placeholder only block
* 1) Used for placeholder blocks for layouts
*/
.fpo {
  background: var(--pl-color-fpo-light);
  border: 1px dashed var(--pl-color-fpo);
  border-radius: 5px;
  padding: 1rem;
  margin-top: 1rem;
  margin-bottom: 1rem;
  font-weight: bold;
  text-align: center;
  color: var(--pl-color-fpo);
}

.sg-pattern-example small {
  display: none;
}

/**
 * Add height and overflow to two column fixed layout to show functionality only in style-guide example.
 */
.sg-pattern-example .l-page-layout--two-column-fixed {
  height: 10rem;
  overflow: auto;
}

/**
 * Add min-height of 0 to two column fixed to help with showing functionality only in style-guide example.
 */
.sg-pattern-example .l-page-layout--two-column-fixed .l-page-layout__secondary {
  min-height: 0;
}

/**
 * FPO block within two column fixed layout within secondary section
 * 1) Width expands entire container at small screens
 */
.sg-pattern-example
.l-page-layout--two-column-fixed
.l-page-layout__secondary
.fpo-block {
  width: 100%;
  /* 1 */
}

/**
 * FPO block within two column fixed layout within secondary section larger screens
 * 1) Set height to 100% of viewport height
 * 2) Set width = width of vertical header
 */
@media all and (min-width: 70em) {
  .sg-pattern-example
.l-page-layout--two-column-fixed
.l-page-layout__secondary
.fpo-block {
    width: 20rem;
    /* 1 */
    height: 100vh;
    /* 2 */
    margin-bottom: 0;
  }
}

/**
 * Two column fixed layout within pattern example
 * 1) Set height to height of placeholder content secondary section
 * 2) Set overflow to auto so the secondary section stays fixed while the main section scrolls
 */
.sg-pattern-example .l-page-layout--two-column-fixed {
  height: 18.3rem;
  overflow: auto;
}

/**
 * Secondary section within pattern example and two-column fixed at larger screens
 * 1) Position absolute to make this pattern similar to fixed vertical header
 * 2) Height inherits so it doesn't span longer than the pattern window on "All" PL page
 * 3) Float this left to get layout sections side by side within PL "View All" section
 */
@media all and (min-width: 70em) {
  .sg-pattern-example
.l-page-layout--two-column-fixed
.l-page-layout__secondary {
    position: absolute;
    /* 1 */
    height: inherit;
    /* 2 */
    float: left;
    /* 3 */
  }
}

/**
 *  Fpo block within pattern example, two column fixed, and secondary section
 * 1) Make fpo block width of the container on small screens
 */
.sg-pattern-example
.l-page-layout--two-column-fixed
.l-page-layout__secondary
.fpo-block {
  width: 100%;
  /* 1 */
}

/**
 * FPO Block Within pattern example, two column fixed, and secondary layout larger screens
 * 1) Added width similar to style guide vertical header
 * 2) Height inherits so it doesn't span longer than the pattern window on "All" PL page
 */
@media all and (min-width: 70em) {
  .sg-pattern-example
.l-page-layout--two-column-fixed
.l-page-layout__secondary
.fpo-block {
    width: 20rem;
    /* 1 */
    height: inherit;
    /* 2 */
  }
}

/**
 * Add height of main to get appearance of side bar staying fixed while main window scrolls.
 */
.sg-pattern-example .l-page-layout--two-column-fixed .l-page-layout__main {
  height: 30rem;
}

/**
 * Add height of fpo block to equal height of main to help with scrolling main window/fixed sidebar effect.
 */
.sg-pattern-example
.l-page-layout--two-column-fixed
.l-page-layout__main
.fpo-block {
  height: 30rem;
  margin-bottom: 0;
}

/**
 * Vertical header in pattern example at large screens
 */
@media all and (min-width: 70em) {
  .sg-pattern-example .c-header--vertical {
    max-width: 20rem;
  }
}

.sg-colors,
.sg-elevations {
  font-family: sans-serif;
  list-style: none;
}

.sg-colors {
  -moz-column-count: 3;
       column-count: 3;
}

@media screen and (max-width: 720px) {
  .sg-colors {
    -moz-column-count: 2;
         column-count: 2;
  }
}

@media screen and (max-width: 480px) {
  .sg-colors {
    -moz-column-count: 1;
         column-count: 1;
  }
}

.sg-elevations {
  display: flex;
  flex-direction: row;
  padding: 5rem 3rem;
  flex-wrap: wrap;
}

.sg-swatch {
  display: flex;
  flex-direction: row;
  align-items: center;
}

.sg-swatchbox {
  display: flex;
  width: 3rem;
  height: 3rem;
  margin-right: 1rem;
  margin-left: 1rem;
  content: " ";
  flex-shrink: 0;
}

.sg-elevation {
  display: flex;
  flex-direction: row;
  margin: 2 4rem;
  flex-basis: 50%;
}

.sg-elevationbox {
  display: flex;
  box-sizing: border-box;
  width: 4rem;
  height: 4rem;
  margin-right: 3rem;
  margin-bottom: 2rem;
  border-collapse: collapse;
  content: " ";
  border: 1px #605e5c solid;
  border-image-source: none;
  border-image-slice: 100%;
  border-image-width: 1;
  border-image-outset: 0;
  border-image-repeat: stretch;
  flex-shrink: 0;
  page-break-inside: avoid;
}

.sg-anim-blocks {
  display: flex;
  justify-content: center;
  height: 200px;
  background-color: var(--buttonBackgroundCheckedHovered);
  align-content: center;
  align-items: center;
  will-change: content;
}

.sg-anim-block {
  width: 75px;
  height: 75px;
  margin: 1rem;
  content: "";
  background-color: #72ad97;
  will-change: opactiy;
}

.tmp-hidden {
  display: none;
}

body > .tmp-hidden {
  display: block;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
