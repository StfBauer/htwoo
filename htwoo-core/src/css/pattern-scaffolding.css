/*------------------------------------*\
    #VARIABLES
\*------------------------------------*/
/**
* These variables are specific to the Pattern Lab shell and exist
* indepenedently of any project-specific styles
*/
/*------------------------------------*\
    #ANNOTATIONS
\*------------------------------------*/
/**
 * Annotated elements styles
 * 1) Annotation styles that appear inside the iframe
 * 2) For elements in the DOM that have an annotation, we want to
 * provide styles that help the user understand that annotations are available.
 * We do this with some cursor helpers and a
 */
.pl-has-annotation {
  cursor: help !important;
  outline: 1px dotted #808080;
  outline-offset: -4px;
  transition: box-shadow 0.1s ease;
}
.pl-has-annotation a,
.pl-has-annotation input {
  cursor: help !important;
}
.pl-has-annotation:hover {
  box-shadow: 0 0 3px #808080;
}
.pl-has-annotation.active {
  box-shadow: inset 0 0 6px #4d4c4c;
  outline: 1px dotted #808080;
  outline-offset: -1px;
}

/**
 * Annotation tooltip
 * 1) Appears inside the iframe over any element that has an
 *    annotation attached to it.
 */
.pl-c-annotation-tip {
  align-items: center;
  justify-content: center;
  width: 24px !important;
  height: 24px !important;
  margin-top: 6px !important;
  margin-left: 6px !important;
  border-radius: 50% !important;
  background-color: #222 !important;
  background-color: var(--themePrimary) !important;
  color: #fff !important;
  font-size: 16px !important;
  position: absolute;
  z-index: 100;
}
.pl-c-annotation-tip:not([hidden]) {
  display: flex;
}

.pl-header {
  display: none;
  flex-direction: row;
  height: max(5vh, 3rem);
  background-color: #018dae;
  text-shadow: 3px 3px #000;
  align-content: stretch;
  align-items: center;
}
.pl-header.show {
  display: flex;
}

.pl-header-logo {
  display: block;
  width: auto;
  height: max(5vh, 3rem);
}

.pl-header-title {
  font-size: 1.5vh;
  font-weight: 700;
  box-sizing: border-box;
  padding: 0.75rem 1rem 1rem;
  text-transform: uppercase;
  color: white;
}

.pl-iconsearch {
  position: -webkit-sticky;
  position: sticky;
  top: 0;
  right: 0;
  left: 0;
  box-sizing: border-box;
  padding: 1rem 5vw 1.5rem;
  background-color: var(--white);
}

.pl-toolbar {
  display: flex;
  overflow: hidden;
  justify-content: space-between;
  height: auto;
  min-height: 2rem;
  max-height: 50vh;
  margin: 1rem 0;
  padding: 0.5rem 1rem;
  border: 1px var(--themePrimary) solid;
}

.pl-actions {
  display: flex;
  flex-direction: row;
}

.pl-action {
  width: 12.5rem;
}

.pl-selection {
  width: auto;
  min-width: 50vw;
  max-width: 100%;
}

.pl-selection-ctn {
  display: grid;
  min-height: 3.5rem;
  align-content: end;
  align-items: end;
  grid-template-columns: repeat(auto-fill, minmax(3rem, 1fr));
}

.pl-icongrid {
  display: grid;
  max-width: 90vw;
  margin: 0 auto;
  gap: 1rem 1rem;
  grid-template-columns: repeat(auto-fill, minmax(3rem, 1fr));
  grid-auto-rows: 3rem;
}

.object-embedd {
  overflow: hidden;
  width: 0;
  height: 0;
}

.pl-svg-symbol {
  display: block;
  box-sizing: border-box;
  padding: 0.5rem;
  cursor: pointer;
  border: 1px transparent solid;
  border-radius: 0.24rem;
  fill: currentColor;
}
.pl-svg-symbol:hover {
  background-color: var(--themeLighter);
}
.pl-svg-symbol.selected {
  background-color: var(--themeLighter);
}
.pl-svg-symbol svg {
  pointer-events: none;
}
.pl-svg-symbol.hidden {
  display: none;
}

.pl-act-dwnld {
  padding: 1rem 0 0.5rem;
  text-align: center;
}
.pl-act-dwnld .hoo-button-primary {
  display: inline-flex;
}

.pl-act-stylswtch {
  padding-bottom: 0.75rem;
  border-bottom: 1px var(--themePrimary) solid;
}
.pl-act-stylswtch .hoo-toggle-slider {
  margin-left: 0;
}
.pl-act-stylswtch .hoo-label {
  display: block;
  margin-bottom: 0.25rem;
}

/**
 * This stylesheet is for styles you want to include only when displaying demo
 * styles for grids, animations, color swatches, etc.
 * These styles will not be your production CSS.
 */
:root {
  --pl-border-color: #ddd;
  --pl-border-radius: 8px;
  --pl-color-fpo: #69b3e7;
  --pl-color-fpo-light: #edf6fc;
  --pl-grid-gap: 1rem;
}

#sg-patterns {
  box-sizing: border-box !important;
  max-width: 100%;
  padding: 0 0.5em;
}

.demo-animate {
  margin-bottom: 1em;
  padding: 1em;
  cursor: pointer;
  text-align: center;
  border-radius: var(--pl-border-radius);
  background: #ddd;
}

.sg-label {
  font-size: 0.9rem;
  line-height: 1;
  line-height: 1.4;
  flex-basis: 50%;
}
.sg-label-big {
  font-size: 1.2rem;
  font-weight: bold;
}
.sg-label:first-child {
  text-align: right;
}

/**
 * Icon grid
 * 1) Generated by Gul-SVG-Sprites
 */
.icon-grid {
  display: grid;
  gap: 2rem;
  grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
}

.icon-grid__item {
  display: flex;
  flex-direction: column;
  justify-content: center;
  height: 5.5rem;
  padding: 8px;
  border: 1px solid var(--pl-border-color);
  border-radius: var(--pl-border-radius);
  align-items: center;
}

.icon-grid .c-icon {
  margin-bottom: 0.25rem;
}

.icon-grid__label {
  font-size: 10px;
}

.icon {
  width: 1rem;
  height: 1rem;
}

.icon-boxes h2 {
  font-size: 1rem;
}

/**
* For placeholder only block
* 1) Used for placeholder blocks for layouts
*/
.fpo {
  font-weight: bold;
  margin-top: 1rem;
  margin-bottom: 1rem;
  padding: 1rem;
  text-align: center;
  color: var(--pl-color-fpo);
  border: 1px dashed var(--pl-color-fpo);
  border-radius: 5px;
  background: var(--pl-color-fpo-light);
}

.sg-pattern-example small {
  display: none;
}

/**
 * Add height and overflow to two column fixed layout to show functionality only in style-guide example.
 */
.sg-pattern-example .l-page-layout--two-column-fixed {
  overflow: auto;
  height: 10rem;
}

/**
 * Add min-height of 0 to two column fixed to help with showing functionality only in style-guide example.
 */
.sg-pattern-example .l-page-layout--two-column-fixed .l-page-layout__secondary {
  min-height: 0;
}

/**
 * FPO block within two column fixed layout within secondary section
 * 1) Width expands entire container at small screens
 */
.sg-pattern-example .l-page-layout--two-column-fixed .l-page-layout__secondary .fpo-block {
  width: 100%;
  /* 1 */
}

/**
 * FPO block within two column fixed layout within secondary section larger screens
 * 1) Set height to 100% of viewport height
 * 2) Set width = width of vertical header
 */
@media all and (min-width: 70em) {
  .sg-pattern-example .l-page-layout--two-column-fixed .l-page-layout__secondary .fpo-block {
    width: 20rem;
    /* 1 */
    height: 100vh;
    /* 2 */
    margin-bottom: 0;
  }
}
/**
 * Two column fixed layout within pattern example
 * 1) Set height to height of placeholder content secondary section
 * 2) Set overflow to auto so the secondary section stays fixed while the main section scrolls
 */
.sg-pattern-example .l-page-layout--two-column-fixed {
  overflow: auto;
  height: 18.3rem;
}

/**
 * Secondary section within pattern example and two-column fixed at larger screens
 * 1) Position absolute to make this pattern similar to fixed vertical header
 * 2) Height inherits so it doesn't span longer than the pattern window on "All" PL page
 * 3) Float this left to get layout sections side by side within PL "View All" section
 */
@media all and (min-width: 70em) {
  .sg-pattern-example .l-page-layout--two-column-fixed .l-page-layout__secondary {
    position: absolute;
    /* 1 */
    float: left;
    /* 3 */
    height: inherit;
    /* 2 */
  }
}
/**
 *  Fpo block within pattern example, two column fixed, and secondary section
 * 1) Make fpo block width of the container on small screens
 */
.sg-pattern-example .l-page-layout--two-column-fixed .l-page-layout__secondary .fpo-block {
  width: 100%;
  /* 1 */
}

/**
 * FPO Block Within pattern example, two column fixed, and secondary layout larger screens
 * 1) Added width similar to style guide vertical header
 * 2) Height inherits so it doesn't span longer than the pattern window on "All" PL page
 */
@media all and (min-width: 70em) {
  .sg-pattern-example .l-page-layout--two-column-fixed .l-page-layout__secondary .fpo-block {
    width: 20rem;
    /* 1 */
    height: inherit;
    /* 2 */
  }
}
/**
 * Add height of main to get appearance of side bar staying fixed while main window scrolls.
 */
.sg-pattern-example .l-page-layout--two-column-fixed .l-page-layout__main {
  height: 30rem;
}

/**
 * Add height of fpo block to equal height of main to help with scrolling main window/fixed sidebar effect.
 */
.sg-pattern-example .l-page-layout--two-column-fixed .l-page-layout__main .fpo-block {
  height: 30rem;
  margin-bottom: 0;
}

/**
 * Vertical header in pattern example at large screens
 */
@media all and (min-width: 70em) {
  .sg-pattern-example .c-header--vertical {
    max-width: 20rem;
  }
}
.sg-colors,
.sg-elevations {
  font-family: sans-serif;
  list-style: none;
}

.sg-colors {
  max-width: 800px;
  margin: auto;
  margin-top: 2rem;
  padding: 0;
}

.sg-elevations {
  display: flex;
  flex-direction: row;
  padding: 5rem 3rem;
  flex-wrap: wrap;
}

.sg-swatch {
  display: flex;
  flex-direction: row;
  align-items: center;
}
.sg-swatchbox {
  display: flex;
  width: 4rem;
  height: 4rem;
  margin-right: 1rem;
  margin-left: 1rem;
  content: " ";
  flex-shrink: 0;
}

.sg-elevation {
  display: flex;
  flex-direction: row;
  margin: 2 4rem;
  flex-basis: 50%;
}
.sg-elevationbox {
  display: flex;
  box-sizing: border-box;
  width: 4rem;
  height: 4rem;
  margin-right: 3rem;
  margin-bottom: 2rem;
  border-collapse: collapse;
  content: " ";
  border: 1px rgb(96, 94, 92) solid;
  border-image-source: none;
  border-image-slice: 100%;
  border-image-width: 1;
  border-image-outset: 0;
  border-image-repeat: stretch;
  flex-shrink: 0;
  page-break-inside: avoid;
}

.sg-anim-blocks {
  display: flex;
  justify-content: center;
  height: 200px;
  background-color: var(--buttonBackgroundCheckedHovered);
  align-content: center;
  align-items: center;
  will-change: content;
}

.sg-anim-block {
  width: 75px;
  height: 75px;
  margin: 1rem;
  content: "";
  background-color: #72ad97;
  will-change: opactiy;
}

.tmp-hidden {
  display: none;
}

body > .tmp-hidden {
  display: block;
}

.sg-center {
  display: flex;
  justify-content: center;
  height: 100%;
  max-height: 100vh;
  margin-top: 5rem;
  align-content: stretch;
  align-items: center;
}

.sg-item-showcase {
  display: flex;
  gap: 1rem;
}

.demo-item,
.demo-item2 {
  display: flex;
  box-sizing: border-box;
  padding: 2rem;
  background-color: pink;
}

.demo-item {
  grid-column: auto/span 4;
  grid-row: auto;
  transition: all 0.123 ease-in-out;
  /* media query for small devices */
  /* media query for small devices */
  /* media query for small devices */
}
@media screen and (max-width: 1024px) {
  .demo-item {
    grid-column: auto/span 4;
    grid-row: auto;
  }
}
@media screen and (max-width: 768px) {
  .demo-item {
    grid-column: auto/span 6;
    grid-row: auto;
  }
}
@media screen and (max-width: 640px) {
  .demo-item {
    grid-column: auto/span 12;
    grid-row: auto;
  }
}

.demo-item2 {
  grid-column: 7/span 6;
  grid-row: 2;
  transition: all 0.123 ease-in-out;
  /* media query for small devices */
  /* media query for small devices */
  /* media query for small devices */
}
@media screen and (max-width: 1024px) {
  .demo-item2 {
    grid-column: auto/span 4;
    grid-row: auto;
  }
}
@media screen and (max-width: 768px) {
  .demo-item2 {
    grid-column: auto/span 6;
    grid-row: auto;
  }
}
@media screen and (max-width: 640px) {
  .demo-item2 {
    grid-column: auto/span 12;
    grid-row: auto;
  }
}

.dlg-preview {
  max-width: 90vw;
  margin: auto;
  height: 100%;
}
.dlg-preview-flex {
  max-width: 90vw;
  margin: auto;
  margin-top: 1rem;
  display: flex;
  flex-direction: column;
  gap: 1rem;
}
.dlg-preview-flex > dialog {
  position: static;
}

.dlg-background {
  background-image: url("../../images/background.jpg");
  background-position: center center;
  background-size: cover;
  background-repeat: no-repeat;
  height: 100dvh;
  width: 100vw;
}

.pl-js-pattern-example > dialog[open] {
  position: static;
  margin-block: 1rem;
}

body.medium {
  max-width: 50svw;
  margin: 2rem auto;
}

body.small {
  max-width: 320px;
  margin: 2rem auto;
}

.tidy {
  max-width: 6.5rem;
}

.tiles-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(8rem, 1fr));
  grid-auto-rows: 1fr;
}
.tiles-grid::before {
  content: "";
  width: 0;
  padding-bottom: 100%;
  grid-row: 1/1;
  grid-column: 1/1;
}
.tiles-grid > *:first-child {
  grid-row: 1/1;
  grid-column: 1/1;
}

hr {
  margin-top: 3rem;
  margin-bottom: 3rem;
}

h3 {
  margin-top: 3rem;
  margin-bottom: 2rem;
}

.medium-margin {
  margin-inline: 4rem;
  margin-bottom: 5rem;
}
@media screen and (max-width: 480px) {
  .medium-margin {
    margin-inline: 2rem;
  }
}

.CanvasSection-xl4 {
  max-width: 400px;
}

.CanvasSection-xl6 {
  max-width: 618px;
}

.CanvasSection-xl8 {
  max-width: 802px;
}

.CanvasSection-xl12 {
  max-width: 1240px;
}

.body-center {
  min-height: 100svh;
  display: flex;
  justify-content: center;
  align-items: center;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
