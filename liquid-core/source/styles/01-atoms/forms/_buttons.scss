.lqd-button {
	display: flex;
	justify-content: center;

	padding: 0 1rem;

	color: $buttonText;
	border: 1px $buttonBorder solid;
	border-radius: $roundedCorner2;
	outline: none;
	background-color: $buttonBackground;

	align-items: center;
	flex-wrap: nowrap;

	&-label {
		font-size: px2rem(14px);
		font-weight: 600;
		line-height: px2rem(20px);

		display: flex;
		justify-content: center;

		height: px2rem(30px);
		margin: 0 px2rem(4px);

		align-items: center;
	}

	&:active,
	&:hover {
		background-color: $buttonBackgroundCheckedHovered;
	}

	&[disabled],
	&:disabled {
		pointer-events: none;

		color: $buttonTextDisabled;
		border-color: $buttonBackgroundDisabled;
		background-color: $buttonBackgroundDisabled;
	}
}

// Primary button don't get a disabled state because it don't make sense
.lqd-button-primary {
	@extend .lqd-button;

	color: $primaryButtonText;
	// border-color: Fixing border because the color is different
	border-color: $primaryButtonBackground;
	background-color: $primaryButtonBackground;

	&:hover {
		color: $primaryButtonTextHovered;
		border-color: $primaryButtonBackgroundHovered;
		background-color: $primaryButtonBackgroundHovered;
	}

	&:active {
		border-color: $primaryButtonBackgroundPressed;
		background-color: $primaryButtonBackgroundPressed;
	}
}

.lqd-buttoncomp {
	@extend .lqd-button;

	flex-direction: column;

	padding: px2rem(16px) px2rem(12px);

	align-items: flex-start;

	&-label {
		@extend .lqd-button-label;

		line-height: 1em;

		display: block;

		height: 1em;
		margin: 0;
		margin-bottom: px2rem(5px);
	}

	&-desc {
		font-size: px2rem(10px);
		font-weight: normal;
	}
}

.lqd-buttoncomp-primary {
	@extend .lqd-button-primary;

	flex-direction: column;

	padding: px2rem(16px) px2rem(12px);

	align-items: flex-start;

	&-label {
		@extend .lqd-button-label;

		line-height: 1em;

		display: block;

		height: 1em;
		margin: 0;
		margin-bottom: px2rem(5px);
	}

	&-desc {
		font-size: px2rem(10px);
		font-weight: normal;
	}
}

a.lqd-button {
	@extend .lqd-button;

	display: inline-flex;

	width: auto;
	margin-bottom: 1rem;

	text-decoration: none;

	flex-grow: 0;
	flex-shrink: 1;

	* {
		width: auto;
	}

	&:hover {
		color: $buttonText;
	}
}

a.lqd-button-primary {
	@extend .lqd-button-primary;

	display: inline-flex;

	width: auto;
	margin-bottom: 1rem;

	text-decoration: none;

	flex-grow: 0;
	flex-shrink: 1;

	&:hover {
		color: $primaryButtonTextHovered;
		border-color: $primaryButtonBackgroundHovered;
		background-color: $primaryButtonBackgroundHovered;
	}

	&:active {
		border-color: $primaryButtonBackgroundPressed;
		background-color: $primaryButtonBackgroundPressed;
	}
}


/* Split Button Slideout Animation
% {
    opacity: 0;
}
100% {
    opacity: 1;
}
0% {
    transform: translate3d(0px, -10px, 0px);
    pointer-events: none;
}
100% {
    transform: translate3d(0px, 0px, 0px);
    pointer-events: auto;
}

*/
.lqd-buttonsplit {
	position: relative;

	display: flex;

	&-standard {
		@extend .lqd-button;

		border-right: none;
		border-top-right-radius: 0;
		border-bottom-right-radius: 0;
		&[disabled],
		&:disabled {
			pointer-events: none;
	
			color: $buttonTextDisabled;
			border-color: $buttonBackgroundDisabled;
			background-color: $buttonBackgroundDisabled;
		}
	}

	&-carret {
		@extend .lqd-button;

		font-weight: 400;

		margin: 0;
		padding: 0;

		color: $buttonText;
		border-left: none;
		border-top-left-radius: 0;
		border-bottom-left-radius: 0;

		.lqd-button-label {
			font-weight: inherit;
			line-height: 1;

			height: auto;
			margin: 0;
			padding: px2rem(2px) px2rem(12px);

			color: inherit;
			border-left: 1px currentColor solid;
		}

		&>* {
			pointer-events: none;
		}
		&[disabled],
		&:disabled {
			pointer-events: none;
	
			color: $buttonTextDisabled;
			border-color: $buttonBackgroundDisabled;
			background-color: $buttonBackgroundDisabled;
		}
	}

	@extend %flyoutDropDown;

	

	// JUST FOR QUICK TESTING
	// LONG GOAL REMOVE
	// &:hover{
	// 	.lqd-buttonflyout{
	// 		overflow: unset;

	// 		height: 100%;
	// 		max-height: auto;

	// 		transition: max-height 3s ease-out 0;

	// 		background: lime;

	// 		flex: 0;
	// 	}
	// }
}

.lqd-buttonsplit-primary {
	@extend .lqd-buttonsplit;

	.lqd-buttonsplit-standard,
	.lqd-buttonsplit-carret {
		color: $primaryButtonText;
		background-color: $primaryButtonBackground;
		border-color: $primaryButtonBackground;

		.lqd-button-label {
			color: currentColor;
		}
		&[disabled],
		&:disabled {
			pointer-events: none;
	
			color: $buttonTextDisabled;
			border-color: $buttonBackgroundDisabled;
			background-color: $buttonBackgroundDisabled;
		}
	}
	&.show-flyout {
		.lqd-buttonsplit-carret{
			background-color: $primaryButtonBackgroundPressed;
			border-color: $primaryButtonBackgroundPressed;
		}
	}
}